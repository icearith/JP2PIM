/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import com.common.Buddy;
import com.common.NetAffair;
import com.server.Server;
import java.awt.Frame;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;

/**
 *
 * @author arith
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame()  {
        initComponents();
        this.jLabel1.grabFocus();
        this.listModel = new DefaultListModel();
        this.buddyList = new ArrayList<Buddy>();
        try {
            this.jLabelHostIPAdress.setText(NetAffair.getHostIpAdress());
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            new JOptionPane().showMessageDialog(new JFrame(), "Unknow Host!");
            this.jLabelHostIPAdress.setText("127.0.0.1");
        }
        

    }
    public void updateServerConnectionCount(boolean add) {
        int n = Integer.parseInt(this.jLabelServerConnectionCount.getText());
        if (add) {
            this.jLabelServerConnectionCount.setText(Integer.toString(++n));
        } else if (!add) {
            this.jLabelServerConnectionCount.setText(Integer.toString(--n));
        }
    }
    public String getServerPort() {
        return this.jTextFieldPort.getText();
    }

    public void setServerPort(int port) {
        this.jTextFieldPort.setText(Integer.toString(port));
    }

    public String getServerIpAddress() {
        return this.jTextFieldIpAddress.getText();
    }

    public void setServerIpAddress(String ipAddress) {
        this.jTextFieldIpAddress.setText(ipAddress);
    }

    public void setLocalServerPort(int port) {
        this.jTextFieldLocalServerPort.setText(Integer.toString(port));
    }

    public int getLocalServerPort() {
        return Integer.parseInt(this.jTextFieldLocalServerPort.getText());
    }

    public void setLocalServerAddress(String IpAddress) {
        this.jLabelLocalServerIpAddress.setText(IpAddress);
    }

    public String getLocalServerAddress() {
        return this.jLabelLocalServerIpAddress.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPaneMain = new javax.swing.JScrollPane();
        jListFriendsList = new javax.swing.JList();
        jPanelHeader = new javax.swing.JPanel();
        jLabelIPIndicator = new javax.swing.JLabel();
        jLabelHostIPAdress = new javax.swing.JLabel();
        jTextFieldHostNickName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldIpAddress = new javax.swing.JTextField();
        jTextFieldPort = new javax.swing.JTextField();
        jButtonAddBuddy = new javax.swing.JButton();
        jTextFieldNickName = new javax.swing.JTextField();
        jButtonSubmitChattingList = new javax.swing.JButton();
        jButtonRemoveBuddy = new javax.swing.JButton();
        jPanelServer = new javax.swing.JPanel();
        jTextFieldLocalServerPort = new javax.swing.JTextField();
        jLabelLocalServerIpAddress = new javax.swing.JLabel();
        jButtonChangeServerState = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelServerConnectionCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("P2P Instant Messager");
        setAlwaysOnTop(true);
        setBackground(java.awt.SystemColor.control);
        setName("mainFrame"); // NOI18N
        setResizable(false);

        jScrollPaneMain.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jScrollPaneMain.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jListFriendsList.setFixedCellHeight(25);
        jListFriendsList.setOpaque(false);
        jListFriendsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListFriendsListMouseClicked(evt);
            }
        });
        jScrollPaneMain.setViewportView(jListFriendsList);

        jPanelHeader.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabelIPIndicator.setText("Host      IP");

        jLabelHostIPAdress.setText("10.10.0.15");

        jTextFieldHostNickName.setText("Arith Xu");

        jLabel3.setText("Nick Name");

        org.jdesktop.layout.GroupLayout jPanelHeaderLayout = new org.jdesktop.layout.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHeaderLayout.createSequentialGroup()
                .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabelIPIndicator)
                        .add(18, 18, 18)
                        .add(jLabelHostIPAdress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jLabel3)
                        .add(18, 18, 18)
                        .add(jTextFieldHostNickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHeaderLayout.createSequentialGroup()
                .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldHostNickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelIPIndicator)
                    .add(jLabelHostIPAdress))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextFieldIpAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldIpAddress.setText("IP Address");
        jTextFieldIpAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldIpAddressMouseClicked(evt);
            }
        });
        jTextFieldIpAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldIpAddressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIpAddressFocusLost(evt);
            }
        });

        jTextFieldPort.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPort.setText("Port");
        jTextFieldPort.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldPortMouseClicked(evt);
            }
        });
        jTextFieldPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPortActionPerformed(evt);
            }
        });
        jTextFieldPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldPortFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPortFocusLost(evt);
            }
        });

        jButtonAddBuddy.setText("+");
        jButtonAddBuddy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddBuddyMouseClicked(evt);
            }
        });

        jTextFieldNickName.setText("Nick Name");
        jTextFieldNickName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldNickName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNickNameMouseClicked(evt);
            }
        });
        jTextFieldNickName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNickNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNickNameFocusLost(evt);
            }
        });

        jButtonSubmitChattingList.setText("Connect");
        jButtonSubmitChattingList.setEnabled(false);
        jButtonSubmitChattingList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSubmitChattingListMouseClicked(evt);
            }
        });
        jButtonSubmitChattingList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitChattingListActionPerformed(evt);
            }
        });

        jButtonRemoveBuddy.setText("Remove");
        jButtonRemoveBuddy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonRemoveBuddyMouseClicked(evt);
            }
        });

        jPanelServer.setBorder(javax.swing.BorderFactory.createTitledBorder("Server"));
        jPanelServer.setOpaque(false);

        jTextFieldLocalServerPort.setText("65535");
        jTextFieldLocalServerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLocalServerPortActionPerformed(evt);
            }
        });

        jLabelLocalServerIpAddress.setText("255.255.255.255");

        jButtonChangeServerState.setText("start");
        jButtonChangeServerState.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonChangeServerStateMouseClicked(evt);
            }
        });

        jLabel2.setText("Port :");

        jLabel1.setText("IPv4:");

        jLabel4.setText("Current Connections:");

        jLabelServerConnectionCount.setText("0");

        org.jdesktop.layout.GroupLayout jPanelServerLayout = new org.jdesktop.layout.GroupLayout(jPanelServer);
        jPanelServer.setLayout(jPanelServerLayout);
        jPanelServerLayout.setHorizontalGroup(
            jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelServerLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelServerLayout.createSequentialGroup()
                        .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel2)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabelLocalServerIpAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 117, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanelServerLayout.createSequentialGroup()
                                .add(jTextFieldLocalServerPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonChangeServerState, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanelServerLayout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelServerConnectionCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(116, 116, 116))
        );
        jPanelServerLayout.setVerticalGroup(
            jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelServerLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelLocalServerIpAddress)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextFieldLocalServerPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonChangeServerState))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelServerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jLabelServerConnectionCount))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButtonRemoveBuddy)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonSubmitChattingList))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelHeader, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jScrollPaneMain)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jTextFieldNickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextFieldIpAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 21, Short.MAX_VALUE)
                                .add(jTextFieldPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonAddBuddy, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanelServer, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .add(jPanelHeader, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldIpAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonAddBuddy)
                    .add(jTextFieldPort, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldNickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPaneMain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonSubmitChattingList)
                    .add(jButtonRemoveBuddy))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void jTextFieldPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPortActionPerformed

    private void jTextFieldIpAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldIpAddressMouseClicked
        // TODO add your handling code here:
        if (jTextFieldIpAddress.getText().equals("IP Address")) {
            jTextFieldIpAddress.setText(null);
        }
    }//GEN-LAST:event_jTextFieldIpAddressMouseClicked

    private void jTextFieldIpAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIpAddressFocusLost
        // TODO add your handling code here:
        if (jTextFieldIpAddress.getText().equals("")) {
            jTextFieldIpAddress.setText("IP Address");
        }

    }//GEN-LAST:event_jTextFieldIpAddressFocusLost

    private void jTextFieldPortMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPortMouseClicked
        // TODO add your handling code here:
        if (jTextFieldPort.getText().equals("Port")) {
            jTextFieldPort.setText(null);
        }
    }//GEN-LAST:event_jTextFieldPortMouseClicked

    private void jTextFieldPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPortFocusLost
        // TODO add your handling code here:
        if (jTextFieldPort.getText().equals("")) {
            jTextFieldPort.setText("Port");
        }
    }//GEN-LAST:event_jTextFieldPortFocusLost

    private void jButtonAddBuddyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddBuddyMouseClicked
        // TODO add your handling code here:
        if (!(this.jTextFieldNickName.getText().equals("") || this.jTextFieldIpAddress.getText().equals("IP Address") || this.jTextFieldPort.getText().equals("Port"))) {
            Buddy buddy = new Buddy(this.jTextFieldNickName.getText(), this.jTextFieldIpAddress.getText(), (int) Integer.valueOf(this.jTextFieldPort.getText()));
            addBuddyToFriendsList(buddy);
            this.jButtonSubmitChattingList.setEnabled(true);
        } else {
            new JOptionPane().showMessageDialog(new Frame(), "Error input!");
        }

    }//GEN-LAST:event_jButtonAddBuddyMouseClicked

    private void jTextFieldIpAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIpAddressFocusGained
        // TODO add your handling code here:
        if (jTextFieldIpAddress.getText().equals("IP Address")) {
            jTextFieldIpAddress.setText(null);
        }
    }//GEN-LAST:event_jTextFieldIpAddressFocusGained

    private void jTextFieldPortFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPortFocusGained
        // TODO add your handling code here:
        if (jTextFieldPort.getText().equals("Port")) {
            jTextFieldPort.setText(null);
        }
    }//GEN-LAST:event_jTextFieldPortFocusGained

    private void jTextFieldNickNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNickNameFocusGained
        // TODO add your handling code here:
        if (this.jTextFieldNickName.getText().equals("Nick Name")) {
            this.jTextFieldNickName.setText(null);
        }
    }//GEN-LAST:event_jTextFieldNickNameFocusGained

    private void jTextFieldNickNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNickNameFocusLost
        // TODO add your handling code here:
        if (this.jTextFieldNickName.getText().equals("")) {
            this.jTextFieldNickName.setText("Nick Name");
        }
    }//GEN-LAST:event_jTextFieldNickNameFocusLost

    private void jTextFieldNickNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNickNameMouseClicked
        // TODO add your handling code here:
        if (this.jTextFieldNickName.getText().equals("Nick Name")) {
            this.jTextFieldNickName.setText(null);
        }
    }//GEN-LAST:event_jTextFieldNickNameMouseClicked

    private void jButtonSubmitChattingListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitChattingListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSubmitChattingListActionPerformed

    private void jListFriendsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListFriendsListMouseClicked
        // TODO add your handling code here:
        if (jListFriendsList.getSelectedIndex() != -1 && evt.getClickCount() == 2) {
        }
    }//GEN-LAST:event_jListFriendsListMouseClicked

    private void jButtonSubmitChattingListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSubmitChattingListMouseClicked
        // TODO add your handling code here:
        List<Buddy> selectedBuddyList = new ArrayList<Buddy>();

        Object[] selectedObject = this.jListFriendsList.getSelectedValues();
        if (selectedObject.length > 0) {
            for (int i = 0; i < selectedObject.length; ++i) {
                for (int j = 0; j < this.buddyList.size(); ++j) {
                    String[] buddyInfo = selectedObject[i].toString().split("-");
                    if (buddyInfo[1].equals(this.buddyList.get(j).getIpAdress()) && buddyInfo[2].equals(String.valueOf(this.buddyList.get(j).getServerPort()))) {
                        selectedBuddyList.add(this.buddyList.get(j));
                    }
                }
            }
            Buddy myself = new Buddy(this.jTextFieldHostNickName.getText(), this.jLabelHostIPAdress.getText(), Integer.parseInt(this.jTextFieldLocalServerPort.getText()));
            ChatFrame chatFrame = new ChatFrame(selectedBuddyList,myself);
        }

    }//GEN-LAST:event_jButtonSubmitChattingListMouseClicked

    private void jButtonRemoveBuddyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRemoveBuddyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRemoveBuddyMouseClicked

    private void jTextFieldLocalServerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLocalServerPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLocalServerPortActionPerformed

    private void jButtonChangeServerStateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonChangeServerStateMouseClicked
        // TODO add your handling code here:
        int state = jButtonChangeServerState.getText().equals("start") ? 1 : 0;
        switch (state) {
            case 1:
                Buddy myself = new Buddy(this.jTextFieldHostNickName.getText(), this.jLabelHostIPAdress.getText(), Integer.parseInt(this.jTextFieldLocalServerPort.getText()));
                server = new Server(this.getLocalServerAddress(), this.getLocalServerPort(),myself,this);
                serverThread = new Thread(server);
                serverThread.start();
                this.jButtonChangeServerState.setText("stop");
                this.jTextFieldLocalServerPort.setEnabled(false);
                break;
            case 0:
                serverThread.interrupt();
                this.jTextFieldLocalServerPort.setText(Integer.toString(NetAffair.getRandomFreePort()));
                this.jButtonChangeServerState.setText("start");
                this.jTextFieldLocalServerPort.setEnabled(true);
                break;

        }

    }//GEN-LAST:event_jButtonChangeServerStateMouseClicked
    public void addBuddyToFriendsList(Buddy buddy) {

        String element = buddy.getNickName() + "-" + buddy.getIpAdress() + "-" + buddy.getServerPort();
        this.listModel.addElement(element);
        this.jListFriendsList.setModel(this.listModel);
        this.jListFriendsList.updateUI();
        this.buddyList.add(buddy);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    private DefaultListModel listModel;
    private List<Buddy> buddyList;
    private Thread serverThread;
    private Server server;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBuddy;
    private javax.swing.JButton jButtonChangeServerState;
    private javax.swing.JButton jButtonRemoveBuddy;
    private javax.swing.JButton jButtonSubmitChattingList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelHostIPAdress;
    private javax.swing.JLabel jLabelIPIndicator;
    private javax.swing.JLabel jLabelLocalServerIpAddress;
    private javax.swing.JLabel jLabelServerConnectionCount;
    private javax.swing.JList jListFriendsList;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelServer;
    private javax.swing.JScrollPane jScrollPaneMain;
    private javax.swing.JTextField jTextFieldHostNickName;
    private javax.swing.JTextField jTextFieldIpAddress;
    private javax.swing.JTextField jTextFieldLocalServerPort;
    private javax.swing.JTextField jTextFieldNickName;
    private javax.swing.JTextField jTextFieldPort;
    // End of variables declaration//GEN-END:variables
}
